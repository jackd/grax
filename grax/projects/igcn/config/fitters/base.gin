import grax.config
import grax.projects.igcn.fitters
import grax.projects.igcn.modules
import huf.configurables

node_features_transform = (
    @grax.graph_utils.transforms.row_normalize,
    @grax.graph_utils.transforms.to_format,
)
grax.graph_utils.transforms.to_format.fmt = "dense"
graph_transform = ()


optimizer = @optax.chain_star()
optax.chain_star.transforms = [
    @optax.additive_weight_decay(),
    @optax.adam(),
]

optax.adam.learning_rate = %lr
optax.additive_weight_decay.weight_decay = %weight_decay

module_fun = @igcn.IGCN
igcn.IGCN.node_transform = @igcn.mlp

igcn.mlp.num_classes = %num_classes
igcn.mlp.hidden_filters = %filters
igcn.mlp.dropout_rate = %dropout_rate

lr = 1e-2
steps = 1000
patience = 100
filters = 64
dropout_rate = 0.8
use_batch_norm = False
use_layer_norm = False
activation = @jax.nn.relu

tol = 1e-5
eps = 0.1

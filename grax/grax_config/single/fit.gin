import grax.config
import grax.huf_utils
import huf
import huf.callbacks
import huf.cli
import huf.config
import huf.configurables

include "huf_config/models/base.gin"
include "grax_config/single/base.gin"

huf.cli.main.fun = @grax.huf_utils.fit_prepared
huf.cli.main.callbacks = [@huf.experiments.Logger()]

grax.huf_utils.fit_prepared.initial_state = %seed
grax.huf_utils.fit_prepared.data = %fit_data
grax.huf_utils.fit_prepared.epochs = %steps
grax.huf_utils.fit_prepared.callbacks = %callbacks

dtype = "float32"

callbacks = [
    @huf.callbacks.EpochProgbarLogger(),
    @huf.callbacks.EarlyStopping(),
    @huf.callbacks.TerminateOnNaN(),
]
seed = 0
huf.callbacks.EarlyStopping.objective = %objective
huf.callbacks.EarlyStopping.patience = %patience
huf.callbacks.EarlyStopping.restore_best = True

objective = @huf.objective()
patience = 100
